{"version":3,"sources":["kits.js","Pad.js","Pads.js","Controls.js","Screen.js","Machine.js","App.js","reportWebVitals.js","index.js"],"names":["kits","name","samples","keycode","path","Pad","props","sample","src","id","type","preload","className","onClick","element","document","getElementById","openhh","paused","pause","currentTime","play","setCurrentPad","toUpperCase","dataset","Pads","bank","volume","mute","useEffect","addEventListener","keypress","removeEventListener","e","pad","key","classList","add","setTimeout","remove","map","Controls","setVolume","setBank","setMute","style","transform","width","min","max","step","value","onChange","target","position","top","left","checked","Screen","currentPad","color","Machine","useState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef44f598.chunk.js","sourcesContent":["const kits = [\n  {\n    name: \"Linn LM-1\",\n    samples: [\n      { name: \"Cabasa\", keycode: \"1\", path: \"samples/Linn LM-1/cabasa.wav\" },\n      { name: \"Cowbell\", keycode: \"2\", path: \"samples/Linn LM-1/cowb.wav\" },\n      { name: \"Tambourine\", keycode: \"3\", path: \"samples/Linn LM-1/tamb.wav\" },\n      { name: \"Beep\", keycode: \"4\", path: \"samples/Linn LM-1/linn_bp.wav\" },\n      { name: \"Conga Lo\", keycode: \"q\", path: \"samples/Linn LM-1/congal.wav\" },\n      { name: \"Conga Hi\", keycode: \"w\", path: \"samples/Linn LM-1/conga.wav\" },\n      { name: \"Crash\", keycode: \"e\", path: \"samples/Linn LM-1/crash.wav\" },\n      { name: \"Ride\", keycode: \"r\", path: \"samples/Linn LM-1/ride.wav\" },\n      { name: \"Rim\", keycode: \"a\", path: \"samples/Linn LM-1/sst.wav\" },\n      { name: \"Clap\", keycode: \"s\", path: \"samples/Linn LM-1/clap.wav\" },\n      { name: \"Hi-hat C\", keycode: \"d\", path: \"samples/Linn LM-1/chh.wav\" },\n      { name: \"Hi-hat O\", keycode: \"f\", path: \"samples/Linn LM-1/ohh.wav\" },\n      { name: \"Kick\", keycode: \"z\", path: \"samples/Linn LM-1/kick1.wav\" },\n      { name: \"Snare\", keycode: \"x\", path: \"samples/Linn LM-1/sd1.wav\" },\n      { name: \"Mid Tom\", keycode: \"c\", path: \"samples/Linn LM-1/midtom.wav\" },\n      { name: \"Hi Tom\", keycode: \"v\", path: \"samples/Linn LM-1/hitom.wav\" },\n    ],\n  },\n  {\n    name: \"Boss DR-110\",\n    samples: [\n      { name: \"empty\", keycode: \"1\", path: \"\" },\n      { name: \"empty\", keycode: \"2\", path: \"\" },\n      { name: \"empty\", keycode: \"3\", path: \"\" },\n      { name: \"empty\", keycode: \"4\", path: \"\" },\n      { name: \"empty\", keycode: \"q\", path: \"\" },\n      { name: \"empty\", keycode: \"w\", path: \"\" },\n      { name: \"Crash\", keycode: \"e\", path: \"samples/Boss DR-110/DR110CYM.WAV\" },\n      { name: \"empty\", keycode: \"r\", path: \"\" },\n      { name: \"empty\", keycode: \"a\", path: \"\" },\n      { name: \"Clap\", keycode: \"s\", path: \"samples/Boss DR-110/DR110CLP.WAV\" },\n      {\n        name: \"Hi-hat C\",\n        keycode: \"d\",\n        path: \"samples/Boss DR-110/DR110CHT.WAV\",\n      },\n      {\n        name: \"Hi-hat O\",\n        keycode: \"f\",\n        path: \"samples/Boss DR-110/DR110OHT.WAV\",\n      },\n      { name: \"Kick\", keycode: \"z\", path: \"samples/Boss DR-110/DR110KIK.WAV\" },\n      { name: \"Snare\", keycode: \"x\", path: \"samples/Boss DR-110/DR110SNR.WAV\" },\n      { name: \"empty\", keycode: \"c\", path: \"\" },\n      { name: \"empty\", keycode: \"v\", path: \"\" },\n    ],\n  },\n];\n\nexport default kits;\n","const Pad = (props) => {\n  const { sample } = props;\n\n  return (\n    <div>\n      <audio\n        src={sample.path}\n        id={`${sample.keycode}-pad`}\n        type=\"audio/wav\"\n        preload=\"auto\"\n        data-name={sample.name}\n      />\n      <button\n        id={`${sample.keycode}-button`}\n        className={sample.path !== \"\" ? \"pad-button\" : \"pad-button inactive\"}\n        onClick={() => {\n          const element = document.getElementById(`${sample.keycode}-pad`);\n          if (sample.keycode === \"d\") {\n            const openhh = document.getElementById(\"f-pad\");\n            if (!openhh.paused) openhh.pause();\n          }\n          element.currentTime = 0;\n          element.play();\n          props.setCurrentPad(\n            `${sample.keycode.toUpperCase()} ${element.dataset.name}`\n          );\n        }}\n      >\n        {sample.keycode}\n      </button>\n    </div>\n  );\n};\n\nexport default Pad;\n","import { useEffect } from \"react\";\nimport kits from \"./kits\";\nimport Pad from \"./Pad\";\n\nconst Pads = ({ setCurrentPad, bank, volume, mute }) => {\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keypress);\n\n    return () => document.removeEventListener(\"keydown\", keypress);\n  });\n  const keypress = (e) => {\n    const pad = document.getElementById(`${e.key}-pad`);\n    if (!pad) return;\n    if (e.key === \"d\") {\n      const openhh = document.getElementById(\"f-pad\");\n      if (!openhh.paused) openhh.pause();\n    }\n    pad.currentTime = 0;\n    pad.volume = volume / 100;\n    if (!mute) pad.play();\n    setCurrentPad(`${e.key.toUpperCase()} ${pad.dataset.name}`);\n    document.getElementById(`${e.key}-button`).classList.add(\"pressed\");\n    setTimeout(\n      () =>\n        document.getElementById(`${e.key}-button`).classList.remove(\"pressed\"),\n      50\n    );\n  };\n\n  return (\n    <div id=\"pads\">\n      {kits[bank].samples.map((sample) => (\n        <Pad sample={sample} setCurrentPad={setCurrentPad} />\n      ))}\n    </div>\n  );\n};\n\nexport default Pads;\n","import kits from \"./kits\";\n\nconst Controls = ({ setVolume, setBank, setMute, volume, bank }) => {\n  return (\n    <div id=\"controls\">\n      <div id=\"select-bank\">\n        <button\n          className=\"control-button\"\n          onClick={() => (kits[bank - 1] ? setBank(bank - 1) : null)}\n        >\n          &lt;\n        </button>\n        <button\n          className=\"control-button\"\n          onClick={() => (kits[bank + 1] ? setBank(bank + 1) : null)}\n        >\n          &gt;\n        </button>\n        <br />\n        <br />\n        <label>SELECT BANK</label>\n      </div>\n      <div id=\"volume-control\">\n        <div\n          style={{ transform: \"rotate(-90deg)\", width: \"110px\" }}\n          className=\"slidecontainer\"\n        >\n          <input\n            className=\"slider\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n            value={volume}\n            onChange={(e) => setVolume(e.target.value)}\n          />\n        </div>\n\n        <label>\n          <span\n            style={{\n              position: \"absolute\",\n              top: \"270px\",\n              width: \"100%\",\n              left: \"0px\",\n            }}\n          >\n            VOLUME\n          </span>\n        </label>\n      </div>\n      <div id=\"mute-control\">\n        <label className=\"toggle\">\n          <input\n            className=\"control-button\"\n            type=\"checkbox\"\n            onChange={(e) => setMute(e.target.checked)}\n          ></input>\n          <span className=\"toggle-slider\"></span>\n        </label>\n        <br />\n        <br />\n        MUTE\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import kits from \"./kits\";\n\nconst Screen = ({ bank, currentPad, volume, mute }) => {\n  return (\n    <div id=\"screen\">\n      BANK: {bank} {kits[bank].name}\n      <br />\n      PAD: &nbsp;{currentPad}\n      <br />\n      VOL: &nbsp;{volume}\n      <br />\n      {mute ? (\n        <span style={{ color: \"rgba(0, 0, 0, 0.3);\" }}>MUTE: On</span>\n      ) : (\n        <span id=\"mute\">MUTE: Off</span>\n      )}\n    </div>\n  );\n};\n\nexport default Screen;\n","import Pads from \"./Pads\";\nimport Controls from \"./Controls\";\nimport Screen from \"./Screen\";\nimport { useState } from \"react\";\n\nconst Machine = () => {\n  const [bank, setBank] = useState(0);\n  const [currentPad, setCurrentPad] = useState(\"\");\n  const [volume, setVolume] = useState(100);\n  const [mute, setMute] = useState(false);\n\n  return (\n    <div id=\"machine\">\n      <Pads\n        setCurrentPad={setCurrentPad}\n        bank={bank}\n        volume={volume}\n        mute={mute}\n      />\n      <Screen bank={bank} currentPad={currentPad} volume={volume} mute={mute} />\n      <Controls\n        bank={bank}\n        setBank={setBank}\n        volume={volume}\n        setVolume={setVolume}\n        setMute={setMute}\n      />\n    </div>\n  );\n};\n\nexport default Machine;\n","import \"./App.css\";\nimport Machine from \"./Machine.js\";\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <div id=\"wrapper\">\n        <Machine />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}